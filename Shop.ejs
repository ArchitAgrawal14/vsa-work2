<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Shop</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous">
    <link rel="stylesheet" href="/style/shop.css">
    <link rel="stylesheet" href="/style/header.css">
    <style>
        #toast {
            background-color: #007bff;
            color: white;
        }
        .toast-header {
            background-color: #0056b3;
            color: white;
        }
        .toast .btn-close {
            color: white;
        }
        .toast-body {
            color: white;
        }
        .card {
            transition: opacity 0.5s ease, transform 0.5s ease;
        }
        .card.hide {
            opacity: 0;
            transform: translateY(20px);
            pointer-events: none;
        }
        #search-sort-container {
            display: flex;
            flex-direction: column;
            align-items: flex-end;
            gap: 0.5rem;
        }
        #sort-select {
            width: auto;
            max-width: 150px;
        }
    </style>
</head>
<body style="background-color: black;">
    <%- include("header.ejs") %>
    <header class="p-3 text-bg-primary">
        <div class="container">
            <div class="d-flex flex-wrap align-items-center justify-content-center justify-content-lg-start">
                <a href="/" class="d-flex align-items-center mb-2 mb-lg-0 text-white text-decoration-none">
                    <svg class="bi me-2" width="40" height="32" role="img" aria-label="Bootstrap"><use xlink:href="#bootstrap"></use></svg>
                </a>
                <ol class="nav col-12 col-lg-auto me-lg-auto mb-2 justify-content-center mb-md-0">
                    <li><a href="/Skates" class="nav-link px-2 text-white">Skates</a></li>
                    <li><a href="/Wheels" class="nav-link px-2 text-white">Wheels</a></li>
                    <li><a href="/Helmets" class="nav-link px-2 text-white">Helmets</a></li>
                    <li><a href="/SkinSuits" class="nav-link px-2 text-white">Skin Suits</a></li>
                    <li><a href="/Accessories" class="nav-link px-2 text-white">Accessories</a></li>
                </ol>
                <form id="search-form" class="col-12 col-lg-auto mb-3 mb-lg-0 me-lg-3" role="search">
                    <input type="search" id="search-input" class="form-control form-control-dark text-bg-white" placeholder="Search for Products..." aria-label="Search">
                </form>
                <select id="sort-select" class="form-select form-select-dark ms-3">
                    <option value="default">Sort By</option>
                    <option value="name">Name</option>
                    <option value="price">Price</option>
                </select>
            </div>
        </div>
    </header>
    <div id="products-container">
        <% if(items_data && items_data.length > 0) { %>
            <% items_data.forEach((item) => { %>
                <div class="row d-flex justify-content-around">
                    <div class="card m-5 border-0" style="width: 12rem;" data-name="<%= item.name %>" data-price="<%= item.price %>">
                        <a href="/productDetails" class="detailsOfProduct" data-item-type="<%= item.item_type %>" data-item-id="<%= item.item_id %>">
                            <img src="<%= item.img %>" class="card-img-top" alt="<%= item.name %>">
                        </a>
                        <div class="card-body">
                            <h5 class="card-title"><%= item.name %></h5>
                            <h4 class="card-title">â‚¹<%= item.price %></h4>
                            <div class="input-group mb-3">
                                <div class="input-group-prepend">
                                    <button class="btn btn-outline-secondary" type="button" id="decrement-btn">-</button>
                                </div>
                                <input type="text" class="form-control text-center" id="quantity-input" value="1">
                                <div class="input-group-append">
                                    <button class="btn btn-outline-secondary" type="button" id="increment-btn">+</button>
                                </div>
                            </div>
                            <p class="card-text"><%= item.description %></p>
                            <a href="/Buy_Now" class="btn btn-primary buyNow" data-item-type="<%= item.item_type %>" data-item-id="<%= item.item_id %>">Buy Now</a>
                            <a href="/AddToCart" class="btn btn-primary addItemsToCart" data-item-type="<%= item.item_type %>" data-item-id="<%= item.item_id %>">Add to cart</a>
                        </div>
                    </div>
                </div>
            <% }) %>
        <% } %>
    </div>
    <%- include("footer.ejs") %>
    <div id="toast-container" class="position-fixed bottom-0 end-0 p-3">
        <div id="toast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">
            <div class="toast-header">
                <strong class="me-auto">Success</strong>
                <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
            </div>
            <div class="toast-body">
                Item successfully added to cart!
            </div>
        </div>
    </div>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-pzjw8f+ua7Kw1TIq+8A7V2b3vZ3lOJXfW5JxjZf6eKHeDmt6kG+5GIMkFvV0dPfcJ" crossorigin="anonymous"></script>
    <!-- this below is for searching and sorting. -->     
    <script>
        document.addEventListener("DOMContentLoaded", () => {
            const searchInput = document.getElementById("search-input");
            const sortSelect = document.getElementById("sort-select");
            const productsContainer = document.getElementById("products-container");

            // Filter items based on search input
            searchInput.addEventListener("input", () => {
                const query = searchInput.value.toLowerCase();
                const cards = document.querySelectorAll(".card");

                cards.forEach(card => {
                    const name = card.getAttribute("data-name").toLowerCase();
                    if (name.includes(query)) {
                        card.classList.remove("hide");
                    } else {
                        card.classList.add("hide");
                    }
                });
            });

            // Sort items based on selected option
            sortSelect.addEventListener("change", () => {
                const sortBy = sortSelect.value;
                const cards = Array.from(document.querySelectorAll(".card"));

                if (sortBy === "name") {
                    cards.sort((a, b) => a.getAttribute("data-name").localeCompare(b.getAttribute("data-name")));
                } else if (sortBy === "price") {
                    cards.sort((a, b) => parseFloat(a.getAttribute("data-price")) - parseFloat(b.getAttribute("data-price")));
                }

                // Re-append sorted cards to container
                cards.forEach(card => productsContainer.appendChild(card));
            });
        });
    </script>
    <script>
      document.addEventListener("DOMContentLoaded", () => {
          const buyButton = document.querySelectorAll(".buyNow");
          const addItemsToCartButton = document.querySelectorAll(".addItemsToCart");
          const productDetailslink = document.querySelectorAll(".detailsOfProduct");
  
          buyButton.forEach(button => {
              button.addEventListener("click", async (event) => {
                  event.preventDefault();
                  const item_type = button.getAttribute("data-item-type");
                  const item_id = button.getAttribute("data-item-id");
                  const quantity = button.closest(".card").querySelector("#quantity-input").value;
  
                  try {
                      const response = await fetch("/Buy_Now", {
                          method: "post",
                          headers: {
                              'Content-Type': 'application/json',
                          },
                          body: JSON.stringify({ item_id, item_type, quantity }),
                      });
  
                      const data = await response.json();
  
                      const options = {
                          "key": "YOUR_RAZORPAY_KEY_ID",
                          "amount": data.amount,
                          "currency": data.currency,
                          "name": "Vaibhav Skating Academy",
                          "description": "Test Transaction",
                          "image": "/icons/VSA_logo.png",
                          "order_id": data.id,
                          "handler": async function (response) {
                              const paymentResponse = await fetch('/payment_success', {
                                  method: 'POST',
                                  headers: {
                                      'Content-Type': 'application/json'
                                  },
                                  body: JSON.stringify(response)
                              });
  
                              const paymentData = await paymentResponse.json();
  
                              if (paymentData.success) {
                                  window.location.href = "/Buy_Now";
                              } else {
                                  alert('Payment failed. Please try again.');
                              }
                          },
                          "prefill": {
                              "name": data.full_name,
                              "email": data.email,
                              "contact": data.mobile_number
                          },
                          "notes": {
                              "address": data.address
                          },
                          "theme": {
                              "color": "#3399cc"
                          }
                      };
  
                      const rzp1 = new Razorpay(options);
                      rzp1.open();
  
                  } catch (error) {
                      console.log("Could not buy item", error);
                  }
              });
          });
  
          addItemsToCartButton.forEach(button => {
              button.addEventListener("click", async (event) => {
                  event.preventDefault();
                  const item_id = button.getAttribute("data-item-id");
                  const item_type = button.getAttribute("data-item-type");
                  const quantity = button.closest(".card").querySelector("#quantity-input").value;
  
                  try {
                      const response = await fetch("/AddToCart", {
                          method: "POST",
                          headers: {
                              "Content-Type": "application/json",
                          },
                          body: JSON.stringify({ item_id, item_type, quantity }),
                      });
  
                      const data = await response.json();
                      if (data.success) {
                          const toast = new bootstrap.Toast(document.getElementById('toast'));
                          toast.show();
                      }
                      console.log("Item id and type successfully sent to server for add to cart button", data);
                  } catch (error) {
                      console.log("Failed to add item", error);
                  }
              });
          });
  
          productDetailslink.forEach(link => {
              link.addEventListener("click", async (event) => {
                  event.preventDefault();
                  const item_id = link.getAttribute("data-item-id");
                  const item_type = link.getAttribute("data-item-type");
                  try {
                      const response = await fetch("/productDetails", {
                          method: "POST",
                          headers: {
                              "Content-Type": "application/json",
                          },
                          body: JSON.stringify({ item_id, item_type }),
                      });
  
                      const contentType = response.headers.get("content-type");
                      if (contentType && contentType.includes("application/json")) {
                        const data = await response.json();
                        console.log("Item data received from server:", data);

                        if (data.success) {
                          window.location.href = `/productDetails?item_id=${item_id}&item_type=${item_type}`;
                        } else {
                          alert("Failed to load item update page.");
                        }
                      } else {
                        const html = await response.text();
                        document.open();
                        document.write(html);
                        document.close();
                      }
                  } catch (error) {
                      console.error("Failed to fetch product details", error);
                  }
              });
          });
      });
    </script>
  
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const decrementButton = document.getElementById('decrement-btn');
            const incrementButton = document.getElementById('increment-btn');
            const quantityInput = document.getElementById('quantity-input');

            decrementButton.addEventListener('click', function() {
                let currentValue = parseInt(quantityInput.value);
                if (currentValue > 1) {
                    quantityInput.value = currentValue - 1;
                }
            });

            incrementButton.addEventListener('click', function() {
                let currentValue = parseInt(quantityInput.value);
                quantityInput.value = currentValue + 1;
            });
        });
    </script>
</body>
</html>
